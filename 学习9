# 昨夜惊魂未定，为什么有些人不爱惜自己的生命，还要作践别人的生命？？？
# 只能安慰自己一句：大难不死必有后福
# 立个flag:开学三周之内找到女朋友
# json文件处理：json是一种轻量级的数据交换格式，采用完全独立于编程语言的文本格式来存储和表示数据
# jsos支持的数据格式：1.对象（字典），使用花括号2.数组（列表），使用方括号3.整型、浮点型、布尔类型还有null类型4.字符串类型（字符串必须要用双引号，不能用单引号
# 字典和列表转json
import json
books = [
    {
        'title':'钢铁是怎样炼成的',
        'price':'9'
    }
    {
        'title':'红楼梦',
        'price':'8'
    }
]
json_str = json.dumps(books,ensure_ascii=False)
print(json_str)
# 将json数据直接dump到文件中：dump函数可以传入一个文件指针，直接将字符dump到文件中
import json
books = [
    {
        'title':'钢铁是怎样炼成的',
        'price':'9'
    }
    {
        'title':'红楼梦',
        'price':'8'
    }
]
with open('a.json','w',encoding = 'utf-8') as fp:
    json.dump(books,fp)
# 将一个json字符串load成python对象
json_str = '[{"title":"钢铁是怎样炼成的","price":9.8},{"title":"红楼梦","price":9.9}]'
books = json.loads(json_str,encoding='utf_8')
print(books)
# 直接从文件中读取json
import json
with open('a.json','r',encoding='utf-8') as fp:
    json_str = json.load(fp)
    print(json_str)
# 昨天学习了MySQL数据库操作
# 多线程爬虫 多线程：同步完成多项任务
# threading模块介绍：threading模块是pythin中专门来做多线程编程的，threading模块中最常用的类是Thread
import threading
import time
def coding()
    for x in range(3):
        print("正在写代码")
        time.sleep(1)
def drawing():
    for x in range(3):
        print("正在画画")
        time.sleep(1)
def main():
    t1 = threading.Thread(target=coding)
    t2 = threading.Thread(target=drawing)
    t1.star()
    t2.star()
main
    main()
# 以上为昨天所学内容
# 昨天出去跑圈了，学习和运动总有一个在路上加油↖(^ω^)↗
# 更加认识到生命的可贵！！！
# 又是一个期待的一天^_^




